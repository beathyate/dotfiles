arch_name="$(uname -m)"

if [ "${arch_name}" = "x86_64" ]; then
  source /usr/local/opt/chruby/share/chruby/chruby.sh
  source /usr/local/opt/chruby/share/chruby/auto.sh
elif [ "${arch_name}" = "arm64" ]; then
  source /opt/homebrew/share/chruby/chruby.sh
  source /opt/homebrew/share/chruby/auto.sh
else
  echo "Unknown architecture: ${arch_name}"
fi

chruby $(cat ~/.ruby-version)

# load nvm
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && . "/opt/homebrew/opt/nvm/nvm.sh"

# aliases
alias lsl="pwd && ls -laGh"
alias bx="bundle exec"
alias gt="gittower"
alias console="heroku local:run bin/rails console"
alias generate="heroku local:run bin/rails generate"
alias start="heroku local:start -f Procfile.dev -p 5000"
alias run="heroku local:run"
alias migrate="heroku local:run bin/rails db:migrate"
alias rollback="heroku local:run bin/rails db:rollback"
alias yolo="git push --force-with-lease"
alias cdc="cd ~/Code"
alias sts="pwd && git status"

# bindings
bindkey "^[[A" history-beginning-search-backward
bindkey "^[[B" history-beginning-search-forward
